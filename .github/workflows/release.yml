name: Release
# This is a test comment to force re-evaluation

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g. 1.0.0)'
        required: true
        default: '1.0.0'

env:
  FLUTTER_VERSION: 'beta'

jobs:
  prepare-and-build:
    name: Prepare Release and Build Artifacts
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.get_version_from_pubspec.outputs.version }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Fetch all history for git tag operations
      
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: Setup Dart SDK
      uses: dart-lang/setup-dart@v1
      with:
        sdk: '3.5.0'
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        cache: true
        channel: beta
        
    - name: Run prepare_release.sh
      run: ./scripts/prepare_release.sh ${{ github.event.inputs.version }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Pass token to script for git push/tag

    - name: Get version from pubspec.yaml (after script)
      id: get_version_from_pubspec
      run: |
        VERSION=$(yq eval '.version' pubspec.yaml)
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.get_version_from_pubspec.outputs.version }}
        release_name: LibreDrop v${{ steps.get_version_from_pubspec.outputs.version }}
        body_path: release_notes.md
        draft: false
        prerelease: true

    - name: Get dependencies
      run: flutter pub get
      
    - name: Build APK
      run: flutter build apk --release --split-per-abi
      
    - name: Build App Bundle
      run: flutter build appbundle --release
      
    - name: Rename artifacts
      run: |
        VERSION=${{ steps.get_version_from_pubspec.outputs.version }}
        mkdir -p dist
        cp build/app/outputs/apk/release/app-arm64-v8a-release.apk "dist/libredrop-v$VERSION-android-arm64.apk"
        cp build/app/outputs/apk/release/app-armeabi-v7a-release.apk "dist/libredrop-v$VERSION-android-arm.apk"
        cp build/app/outputs/apk/release/app-x86_64-release.apk "dist/libredrop-v$VERSION-android-x64.apk"
        cp build/app/outputs/bundle/release/app-release.aab "dist/libredrop-v$VERSION-android.aab"
        
    - name: Upload Android ARM64 APK
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/libredrop-v${{ steps.get_version_from_pubspec.outputs.version }}-android-arm64.apk
        asset_name: libredrop-v${{ steps.get_version_from_pubspec.outputs.version }}-android-arm64.apk
        asset_content_type: application/vnd.android.package-archive
        
    - name: Upload Android ARM APK
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/libredrop-v${{ steps.get_version_from_pubspec.outputs.version }}-android-arm.apk
        asset_name: libredrop-v${{ steps.get_version_from_pubspec.outputs.version }}-android-arm.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Upload Android x64 APK
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/libredrop-v${{ steps.get_version_from_pubspec.outputs.version }}-android-x64.apk
        asset_name: libredrop-v${{ steps.get_version_from_pubspec.outputs.version }}-android-x64.apk
        asset_content_type: application/vnd.android.package-archive

  build-windows:
    name: Build Windows
    needs: prepare-and-build
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Dart SDK
      uses: dart-lang/setup-dart@v1
      with:
        sdk: '3.5.0'

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        cache: true
        channel: beta
        
    - name: Enable Windows Desktop
      run: flutter config --enable-windows-desktop
      
    - name: Get dependencies
      run: flutter pub get
      
    - name: Update version
      run: |
        VERSION=${{ github.event.inputs.version }}
        (Get-Content pubspec.yaml) -replace '^version: .*', "version: $VERSION+${{ github.run_number }}" | Set-Content pubspec.yaml
        
    - name: Build Windows
      run: flutter build windows --release
      
    - name: Create Windows installer
      run: |
        # Install Inno Setup
        # choco install yq
        
        # Create installer script
        $VERSION = "${{ needs.prepare-and-build.outputs.version }}"
        $SCRIPT = @"
        [Setup]
        AppName=LibreDrop
        AppVersion=$VERSION
        AppPublisher=LibreDrop Team
        AppPublisherURL=https://libredrop.org
        AppSupportURL=https://libredrop.org/docs
        AppUpdatesURL=https://libredrop.org/download
        DefaultDirName={autopf}\LibreDrop
        DefaultGroupName=LibreDrop
        OutputDir=dist
        OutputBaseFilename=libredrop-v$VERSION-windows-setup
        Compression=lzma
        SolidCompression=yes
        WizardStyle=modern
        
        [Languages]
        Name: "english"; MessagesFile: "compiler:Default.isl"
        Name: "spanish"; MessagesFile: "compiler:Languages\Spanish.isl"
        Name: "portuguese"; MessagesFile: "compiler:Languages\Portuguese.isl"
        
        [Tasks]
        Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked
        
        [Files]
        Source: "build\windows\x64\runner\Release\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
        
        [Icons]
        Name: "{group}\LibreDrop"; Filename: "{app}\libredrop.exe"
        Name: "{group}\{cm:UninstallProgram,LibreDrop}"; Filename: "{uninstallexe}"
        Name: "{autodesktop}\LibreDrop"; Filename: "{app}\libredrop.exe"; Tasks: desktopicon
        
        [Run]
        Filename: "{app}\libredrop.exe"; Description: "{cm:LaunchProgram,LibreDrop}"; Flags: nowait postinstall skipifsilent
        "@
        
        New-Item -ItemType Directory -Force -Path dist
        $SCRIPT | Out-File -FilePath "installer.iss" -Encoding UTF8
        
        # Compile installer
        & "C:\Program Files (x86)\Inno Setup 6\ISCC.exe" installer.iss
        
    - name: Upload Windows Installer
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.prepare-and-build.outputs.upload_url }}
        asset_path: dist/libredrop-v${{ needs.prepare-and-build.outputs.version }}-windows-setup.exe
        asset_name: libredrop-v${{ needs.prepare-and-build.outputs.version }}-windows-setup.exe
        asset_content_type: application/octet-stream

  build-macos:
    name: Build macOS
    needs: prepare-and-build
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Dart SDK
      uses: dart-lang/setup-dart@v1
      with:
        sdk: '3.5.0'

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        cache: true
        channel: beta
        
    - name: Enable macOS Desktop
      run: flutter config --enable-macos-desktop
      
    - name: Get dependencies
      run: flutter pub get
      
    - name: Update version
      run: |
        VERSION=${{ github.event.inputs.version }}
        sed -i '' "s/^version: .*/version: $VERSION+${{ github.run_number }}/" pubspec.yaml
        
    - name: Build macOS
      run: flutter build macos --release
      
    - name: Create DMG
      run: |
        VERSION=${{ needs.prepare-and-build.outputs.version }}
        
        # Install create-dmg
        brew install create-dmg
        
        # Create DMG
        mkdir -p dist
        create-dmg \
          --volname "LibreDrop v$VERSION" \
          --window-pos 200 120 \
          --window-size 800 400 \
          --icon-size 100 \
          --icon "libredrop.app" 200 190 \
          --hide-extension "libredrop.app" \
          --app-drop-link 600 185 \
          "dist/libredrop-v$VERSION-macos.dmg" \
          "build/macos/Build/Products/Release/"
          
    - name: Upload macOS DMG
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.prepare-and-build.outputs.upload_url }}
        asset_path: dist/libredrop-v${{ needs.prepare-and-build.outputs.version }}-macos.dmg
        asset_name: libredrop-v${{ needs.prepare-and-build.outputs.version }}-macos.dmg
        asset_content_type: application/octet-stream

  build-linux:
    name: Build Linux
    needs: prepare-and-build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Dart SDK
      uses: dart-lang/setup-dart@v1
      with:
        sdk: '3.5.0'

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        cache: true
        channel: beta
        
    - name: Install Linux dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
        
    - name: Enable Linux Desktop
      run: flutter config --enable-linux-desktop
      
    - name: Get dependencies
      run: flutter pub get
      
    - name: Update version
      run: |
        VERSION=${{ github.event.inputs.version }}
        sed -i "s/^version: .*/version: $VERSION+${{ github.run_number }}/" pubspec.yaml
        
    - name: Build Linux
      run: flutter build linux --release
      
    - name: Create AppImage
      run: |
        VERSION=${{ needs.prepare-and-build.outputs.version }}
        
        # Download AppImage tools
        wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
        chmod +x appimagetool-x86_64.AppImage
        
        # Create AppDir structure
        mkdir -p AppDir/usr/bin
        mkdir -p AppDir/usr/share/applications
        mkdir -p AppDir/usr/share/icons/hicolor/256x256/apps
        
        # Copy application
        cp -r build/linux/x64/release/bundle/* AppDir/usr/bin/
        
        # Create desktop file
        cat > AppDir/usr/share/applications/libredrop.desktop << EOF
        [Desktop Entry]
        Type=Application
        Name=LibreDrop
        Comment=Privacy-first cross-platform file sharing
        Exec=libredrop
        Icon=libredrop
        Categories=Network;FileTransfer;
        Keywords=file;sharing;transfer;p2p;privacy;
        EOF
        
        # Create AppRun
        cat > AppDir/AppRun << 'APPRUN'
        #!/bin/bash
        HERE="$(dirname "$(readlink -f "${0}")")"
        exec "${HERE}/usr/bin/libredrop" "$@"
        APPRUN
        chmod +x AppDir/AppRun
        
        # Create AppImage
        mkdir -p dist
        ./appimagetool-x86_64.AppImage AppDir "dist/libredrop-v$VERSION-linux.AppImage"
        
    - name: Upload Linux AppImage
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.prepare-and-build.outputs.upload_url }}
        asset_path: dist/libredrop-v${{ needs.prepare-and-build.outputs.version }}-linux.AppImage
        asset_name: libredrop-v${{ needs.prepare-and-build.outputs.version }}-linux.AppImage
        asset_content_type: application/octet-stream

  update-website:
    name: Update Website
    needs: [prepare-and-build, build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    if: always() && needs.prepare-and-build.result == 'success'
    
    steps:
    - name: Trigger website update
      run: |
        echo "🌐 New release v${{ github.event.inputs.version }} is available!"
        echo "The website will automatically detect and display the new version."
        
        # Optional: Trigger website repository dispatch event
        # curl -X POST \
        #   -H "Authorization: token ${{ secrets.WEBSITE_TOKEN }}" \
        #   -H "Accept: application/vnd.github.v3+json" \
        #   https://api.github.com/repos/username/libredrop-website/dispatches \
        #   -d '{"event_type":"new_release","client_payload":{"version":"${{ github.event.inputs.version }}"}}'
